<?php

/**
 * @file
 * Primary module hooks for aleevas_experements module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Component\Utility\Html;
use Drupal\node\Entity\Node;


/**
 * Implements hook_theme().
 */
function MYTHEME_theme() {
  return [
    'als_exp_form' => [
      'render element' => 'form',
      'template' => 'templates/aleevas-template',
      '#attached' => [
        'library' => ['aleevas_experements/local.library']
      ]
    ],
  ];
}

/**
 * Implements hook_page_attachments_alter().
 */
function aleevas_experements_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'aleevas_experements/local.library';
}

/**
 * Implements hook_cron().
 */
function aleevas_experements_cron() {
  _create_nodes_from_queue();
}

/**
 * Implements hook_preprocess_html().
 */
function aleevas_experements_preprocess_html(&$variables) {
  $title = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'title',
      'content' => 'Hello World!',
    ],
  ];
  $variables['#attached']['html_head'][] = [$title, 'title'];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function aleevas_experements_form_contact_message_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['system_messages'] = [
    '#markup' => '<div id="' . Html::getClass($form_id) . '-messages"></div>',
    '#weight' => -100,
  ];

  $form['actions']['submit']['#ajax'] = [
    'callback' => 'Drupal\aleevas_experements\Form\AjaxContactSubmit::ajaxSubmitCallback',
    'event' => 'click',
    'progress' => [
      'type' => 'throbber',
    ],
  ];
}

/**
 * Help function.
 * Create nodes from queue.
 *
 */
function _create_nodes_from_queue() {
  $queue = Drupal::queue('aleevas_mass_sending');
  $current_language = Drupal::languageManager()->getCurrentLanguage()->getId();
  $end = time() + 30;
  while (time() < $end && ($item = $queue->claimItem())) {
    $data = [
      'type' => 'article',
      'title' => t('The article created by @user', ['@user' => $item->data['name']]),
      'langcode' => $current_language,
      'uid' => $item->data['uid'],
      'status' => 1,
      'field_fields' => [],
    ];
    // Use Node static class.
    // $node = Node::create($data);
    // Use the entity manager.
    $node = Drupal::entityTypeManager()->getStorage('node')->create($data);
    $node->save();

    $queue->deleteItem($item);
  }
}
